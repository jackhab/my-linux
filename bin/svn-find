#!/bin/bash

if [[ -z $1 || "$1" == "--help" ]] ; then 
    echo "svn-find PATTERN [FILE_OR_SVNURL]: find SVN revisions affecting PATTERN in FILE_OR_SVNURL or current working copy"
    exit 1
fi

#generate color variables for echoing;
#tty tests we run in interactive terminal, it prevents error message when run via ssh
if tty -s ; then
    Bold=`echo -e '\033[1m'`
    Normal=`echo -e '\033[0m'`
fi

#File can be empty if we run inside working copy directory
File=$2

#make a list of revision numbers
RevList=`svn log $File | sed -rn 's/^r([0-9]+).*/\1/p'`
RevListCount=$(echo $RevList | wc -w)

#the SVN command used to extract diff which will be searched for PATTERN
SvnCmd="svn diff --non-interactive --diff-cmd diff -c"

    
#for each revision in history
for Rev in $RevList ; do

    #print progress using tput to keep the cursor on the same place
    tput sc #save column
    tput el #erase to EOL
    echo -n "Checking r$Rev     $((RevCount++))/$RevListCount"
    tput rc #restore column

    #if revision's diff contains the text: find and print the exact file diff
    if $SvnCmd $Rev $File 2>/dev/null | grep -Pqe "^[+-].*$1.*"  ; then

        #if the exact file was not given as cmd param build a list of all the files in the revision
        [[ -n $File ]] && FileList=$File || FileList=`$SvnCmd $Rev $File--summarize | sed -r 's/\w\s+(.+)/\1/g'`

        Date=`svn info -r $Rev $File | sed -nr 's/.*Date: (.*)/\1/p' | xargs -I@ date '+%d/%m/%y %H:%M' -d "@"`
        Author=`svn info -r $Rev  $File | sed -nr 's/.*Author: (.*)/\1/p'`

        #for each file
        for f in $FileList ; do
            [[ "$f" == "." ]] && continue
            
            #if file's diff contains the text print file name and matching lines
            if $SvnCmd $Rev $f 2>/dev/null | grep -Pqe "$1" ; then
                
                echo -e "$Bold$f@$Rev $Date by $Author\n==============================$Normal"
                
                $SvnCmd $Rev $f 2>/dev/null | grep --color=auto -C 3 -Pe "$1"
                
                echo
            fi

        done  #for f in $FileList

        Matches="$Matches $Rev"
        
    fi #diff contains the text

done #for Rev in $RevList

tput el #erase to EOL
[[ -n $Matches ]] && echo "Revision summary:$Matches" || echo "No matches"
